version: "3.8"

services:
  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  app:
    build: .
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - ENVIRONMENT=docker
    ports:
      - "8000:8000"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8000/health" ]
      interval: 10s
      retries: 10
      start_period: 50s
      timeout: 10s
    command: >
      sh -c "sleep 10 && alembic revision --autogenerate && alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  celery_worker:
    build: .
    command: poetry run celery -A core.celery worker -l info
    volumes:
      - ./:/app
      - celery_data:/app/celerybeat
    env_file:
      - .env
    environment:
      - ENVIRONMENT=docker
    depends_on:
      - redis
      - app
    restart: always

  celery_beat:
    build: .
    command: poetry run celery -A core.celery beat -l info --schedule=/app/celerybeat/celerybeat-schedule
    volumes:
      - ./:/app
      - celery_data:/app/celerybeat
    env_file:
      - .env
    environment:
      - ENVIRONMENT=docker
    depends_on:
      - redis
      - app
    restart: always

volumes:
  celery_data:
  my_db:
