version: "3.8"

services:
  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - ENVIRONMENT=docker
    ports:
      - "8000:8000"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8000/docs" ]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    command: >
      sh -c "sleep 5 && alembic revision --autogenerate -m "init" && alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  celery_worker:
    build: .
    command: poetry run celery -A core.celery worker -l info
    volumes:
      - ./:/app
      - celery_data:/app/celerybeat
    env_file:
      - .env
    depends_on:
      app:
        condition: service_healthy
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "celery -A core inspect ping -d celery@$(hostname)" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery_beat:
    build: .
    command: poetry run celery -A core.celery beat -l info --schedule=/app/celerybeat/celerybeat-schedule
    volumes:
      - ./:/app
      - celery_data:/app/celerybeat
    env_file:
      - .env
    depends_on:
      app:
        condition: service_healthy
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "celery -A core inspect ping -d celery@$(hostname)" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  celery_data:
